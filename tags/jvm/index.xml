<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JVM on 拾光的博客</title>
    <link>http://localhost:1313/tags/jvm/</link>
    <description>Recent content in JVM on 拾光的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Huan</copyright>
    <lastBuildDate>Sat, 19 Feb 2022 01:48:30 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/jvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JVM之垃圾收集(二)</title>
      <link>http://localhost:1313/2022/02/jvm%E4%B9%8B%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E4%BA%8C/</link>
      <pubDate>Sat, 19 Feb 2022 01:48:30 +0800</pubDate>
      
      <guid>http://localhost:1313/2022/02/jvm%E4%B9%8B%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E4%BA%8C/</guid>
      <description>本文继《垃圾收集（一）》总结垃圾收集器与内存分配与回收策略 一、垃圾收集器 以上是 HotSpot 虚拟机中的 7 个垃圾收集器，连线表示垃圾收集器可以配合使用。 注</description>
    </item>
    
    <item>
      <title>JVM之垃圾收集(一)</title>
      <link>http://localhost:1313/2022/02/jvm%E4%B9%8B%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E4%B8%80/</link>
      <pubDate>Fri, 18 Feb 2022 17:58:51 +0800</pubDate>
      
      <guid>http://localhost:1313/2022/02/jvm%E4%B9%8B%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E4%B8%80/</guid>
      <description>一、概述 垃圾回收主要包括三个问题： 哪些内存需要回收 什么时候回收 如何回收 前文讲述Java内存运行时区域的各个部分，其中程序计数器、虚拟机栈、本</description>
    </item>
    
    <item>
      <title>JVM之类加载机制</title>
      <link>http://localhost:1313/2021/12/jvm%E4%B9%8B%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Fri, 24 Dec 2021 21:19:28 +0800</pubDate>
      
      <guid>http://localhost:1313/2021/12/jvm%E4%B9%8B%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6/</guid>
      <description>一、概述 虚拟机的类加载:指的是将类的 .class 文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在堆区创建一个 java.lang.Class 对象，用来封装类在</description>
    </item>
    
    <item>
      <title>JVM之内存模型</title>
      <link>http://localhost:1313/2021/12/jvm%E4%B9%8B%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 11 Dec 2021 10:44:02 +0800</pubDate>
      
      <guid>http://localhost:1313/2021/12/jvm%E4%B9%8B%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
      <description>Java与C++之间有一堵由内存动态分配和垃圾收集技术所围成的高墙，墙外面的人想进去，墙里面的人却想出来。 一、内存简介 1.1 内核空间与用户空间 一</description>
    </item>
    
    <item>
      <title>JVM之体系结构</title>
      <link>http://localhost:1313/2021/12/jvm%E4%B9%8B%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 10 Dec 2021 20:55:00 +0800</pubDate>
      
      <guid>http://localhost:1313/2021/12/jvm%E4%B9%8B%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid>
      <description>一、JVM 是什么？ JVM全称Java Virtual Machine（Java虚拟机），是一个虚构出来的计算机，它屏蔽了与具体操作系统平台相关的信息，使得J</description>
    </item>
    
  </channel>
</rss>
