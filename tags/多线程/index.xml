<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>多线程 on 拾光的博客</title>
    <link>http://localhost:1313/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
    <description>Recent content in 多线程 on 拾光的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Huan</copyright>
    <lastBuildDate>Sat, 16 Apr 2022 17:10:24 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java多线程之并发工具类</title>
      <link>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/</link>
      <pubDate>Sat, 16 Apr 2022 17:10:24 +0800</pubDate>
      
      <guid>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E5%B7%A5%E5%85%B7%E7%B1%BB/</guid>
      <description>一、 Semaphore 字面意思为 信号量。Semaphore 用来控制某段代码块的并发数。 Semaphore 管理着一组虚拟的许可（permit），permit 的初始数量可通过构</description>
    </item>
    
    <item>
      <title>Java多线程之线程池</title>
      <link>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
      <pubDate>Fri, 15 Apr 2022 19:54:56 +0800</pubDate>
      
      <guid>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
      <description>一、线程池简介 1.1 什么是线程池 线程池是一种多线程处理形式，处理过程中将任务添加到队列，然后在创建线程后自动启动这些任务。 1.2 为什么要用线程池 如果</description>
    </item>
    
    <item>
      <title>Java多线程之并发锁</title>
      <link>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E9%94%81/</link>
      <pubDate>Thu, 14 Apr 2022 19:56:47 +0800</pubDate>
      
      <guid>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E9%94%81/</guid>
      <description>本文先阐述 Java 中各种锁的概念。然后，介绍锁的核心实现 AQS。 互斥，即同一时刻只允许一个线程访问共享资源； 同步，即线程之间如何通信、协作。 一、并</description>
    </item>
    
    <item>
      <title>Java多线程之并发核心机制</title>
      <link>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 14 Apr 2022 19:56:25 +0800</pubDate>
      
      <guid>http://localhost:1313/2022/04/java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B9%8B%E5%B9%B6%E5%8F%91%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6/</guid>
      <description>Java 对于并发的支持主要汇聚在 java.util.concurrent，即 J.U.C。 一、JUC 简介 Java 的 java.util.concurrent 包（简称 J.U.C）中提供了大量并发工</description>
    </item>
    
  </channel>
</rss>
